generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model migrations {
  id        Int    @id @default(autoincrement())
  timestamp BigInt
  name      String @db.VarChar(255)
}

model discount {
  id              Int      @id @default(autoincrement())
  name            String   @db.VarChar(255)
  description     String   @db.VarChar(255)
  discountPorcent Decimal  @db.Decimal(10, 2)
  active          Int      @db.TinyInt
  createdAt       DateTime @default(now()) @db.Timestamp(0)
  updatedAt       DateTime @default(now()) @db.Timestamp(0)
}

model paymenttype {
  id             Int    @id @default(autoincrement())
  namePayment    String @db.VarChar(100)
  paymentTypecol String @db.VarChar(100)
}

model person {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(250)
  birthAt   DateTime @db.Date
  phone     String   @db.VarChar(20)
  document  String   @db.VarChar(14)
  createdAt DateTime @default(now()) @db.DateTime(0)
  updatedAt DateTime @default(now()) @db.DateTime(0)
  user      user[]
}

model productcategory {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(255)
  description String   @db.VarChar(255)
  createdAt   DateTime @default(now()) @db.Timestamp(0)
  updatedAt   DateTime @default(now()) @db.Timestamp(0)
}

model productinventory {
  id          Int      @id @default(autoincrement())
  quantity    Int
  inventoryId Int
  categoryId  Int
  discountId  Int
  createdAt   DateTime @default(now()) @db.Timestamp(0)
  updatedAt   DateTime @default(now()) @db.Timestamp(0)
}

model user {
  id        Int      @id @default(autoincrement())
  email     String   @unique(map: "UQ_e12875dfb3b1d92d7d7c5377e22") @db.VarChar(255)
  password  String   @db.VarChar(255)
  photo     String   @db.VarChar(255)
  personId  Int
  createdAt DateTime @default(now()) @db.DateTime(0)
  updatedAt DateTime @default(now()) @db.DateTime(0)
  person    person   @relation(fields: [personId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_users_persons")

  @@index([personId], map: "FK_users_persons")
}
